{
 "cells": [
  {
   "cell_type": "code",
   "execution_count": 6,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "image/png": "\n",
      "text/plain": [
       "<Figure size 1080x720 with 1 Axes>"
      ]
     },
     "metadata": {
      "needs_background": "light"
     },
     "output_type": "display_data"
    }
   ],
   "source": [
    "#Physics 216\n",
    "#Plotting code to use the whole year!\n",
    "#Jaylene Naylor\n",
    "#September 2015, modified Sept 2017, August 2018, Aug 2020(for Python 3.8)\n",
    "#-------------------------------------------#\n",
    "%matplotlib inline\n",
    "\n",
    "#Import packages and libraries needed and give them shortcut names\n",
    "\n",
    "import numpy as np\n",
    "import matplotlib.pyplot as plt\n",
    "\n",
    "#-------------------------------------------#\n",
    "#Data Section - Create Arrays for data. Perform necessary calculations\n",
    "#CHANGE THE VARIABLE NAMES and numbers to match your data\n",
    "xvariable_Z = np.array([-0.0065,-0.00155,-0.0023,-0.0031,-0.0039]) #what are units?\n",
    "yvariable_F = np.array([0.0098,0.0196,0.0294,0.0392,0.049]) #what are units?\n",
    "\n",
    "\n",
    "#--------------------------------------------#\n",
    "#Create arrays for uncertainties\n",
    "#CHANGE THE VARIABLE NAME and numbers to match your data \n",
    "err_yvariable_err_F = np.array([0.0005,0.0005,0.0005,0.0005,0.0005])\n",
    "\n",
    "\n",
    "#--------------------------------------------#\n",
    "#Re-assign variables as x, y, dy so that the following code may remain generic\n",
    "\n",
    "x = xvariable_Z  #this should be the array you want to plot on the x axis\n",
    "y = yvariable_F\n",
    "dy = err_yvariable_err_F  #this should be your error in y array\n",
    "\n",
    "#----------------------------------------------#\n",
    "#Don't need to change anything in this section!\n",
    " \n",
    "#Find the intercept and slope, b and m, from Python's polynomial fitting function\n",
    "b,m=np.polynomial.polynomial.polyfit(x,y,1,w=dy)\n",
    "\n",
    "#Write the equation for the best fit line based on the slope and intercept\n",
    "fit = b+m*x\n",
    "\n",
    "#Calculate the error in slope and intercept \n",
    "#def Delta(x, dy) is a function, and we will learn how to write our own at a later date. They are very useful!\n",
    "def Delta(x, dy):\n",
    "    D = (sum(1/dy**2))*(sum(x**2/dy**2))-(sum(x/dy**2))**2\n",
    "    return D\n",
    " \n",
    "D=Delta(x, dy)\n",
    " \n",
    "dm = np.sqrt(1/D*sum(1/dy**2)) #error in slope\n",
    "db = np.sqrt(1/D*sum(x**2/dy**2)) #error in intercept\n",
    "\n",
    "#Calculate the \"goodness of fit\" from the linear least squares fitting document\n",
    "def LLSFD2(x,y,dy):\n",
    "    N = sum(((y-b-m*x)/dy)**2)\n",
    "    return N\n",
    "                      \n",
    "N = LLSFD2(x,y,dy)\n",
    "\n",
    "#-----------------------------------------------------------------------#\n",
    "#Plot data on graph. Plot error bars and place values for slope, error in slope\n",
    "#and goodness of fit on the plot using \"annotate\"\n",
    "\n",
    "plt.figure(figsize=(15,10))\n",
    " \n",
    "plt.plot(x, fit, color='green', linestyle='--')\n",
    "plt.scatter(x, y, color='blue', marker='o')\n",
    " \n",
    " \n",
    "#create labels  YOU NEED TO CHANGE THESE!!!\n",
    "plt.xlabel('Z(m)')\n",
    "plt.ylabel('F(N)')\n",
    "plt.title('A plot of F (N) vs Z (m)')\n",
    " \n",
    "plt.errorbar(x, y, yerr=dy, xerr=None, fmt=\"none\") #don't need to plot x error bars\n",
    " \n",
    "plt.annotate('Slope (N/m) = {value:.{digits}E}'.format(value=m, digits=2),\n",
    "             (0.05, 0.9), xycoords='axes fraction')\n",
    " \n",
    "plt.annotate('Error in Slope (N/m) = {value:.{digits}E}'.format(value=dm, digits=1),\n",
    "             (0.05, 0.85), xycoords='axes fraction')\n",
    " \n",
    "plt.annotate('Goodness of fit = {value:.{digits}E}'.format(value=N, digits=2),\n",
    "             (0.05, 0.80), xycoords='axes fraction')\n",
    "\n",
    "plt.show()\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "metadata": {},
   "outputs": [],
   "source": []
  }
 ],
 "metadata": {
  "kernelspec": {
   "display_name": "Python 3",
   "language": "python",
   "name": "python3"
  },
  "language_info": {
   "codemirror_mode": {
    "name": "ipython",
    "version": 3
   },
   "file_extension": ".py",
   "mimetype": "text/x-python",
   "name": "python",
   "nbconvert_exporter": "python",
   "pygments_lexer": "ipython3",
   "version": "3.8.8"
  }
 },
 "nbformat": 4,
 "nbformat_minor": 2
}
